name: ci

env:
  ECR_REPOSITORY_MON: api_monitor
  ECR_REPOSITORY_DB: garmin_api_state_db
  ECR_REGISTRY: public.ecr.aws/r0v0x0g8


permissions:
  contents: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  integrate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest
        pip install -r requirements.txt

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

    - name: Test with pytest
      run: |
        pytest --log-cli-level=DEBUG -x

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Build and push monitor image to ECR
      id: build-image-mon
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/r0v0x0g8
        tag=$(date +%s)
        docker build . --tag api_monitor:$tag
        docker tag api_monitor:$tag public.ecr.aws/r0v0x0g8/api_monitor:$tag
        docker push public.ecr.aws/r0v0x0g8/api_monitor:$tag
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$tag"

    - name: Build and push db image to ECR
      id: build-image-db
      run: |
        tag=$(date +%s)
        cd database
        docker build . --tag garmin_api_state_db:$tag
        docker tag garmin_api_state_db:$tag public.ecr.aws/r0v0x0g8/garmin_api_state_db:$tag
        docker push public.ecr.aws/r0v0x0g8/garmin_api_state_db:$tag
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$tag"
